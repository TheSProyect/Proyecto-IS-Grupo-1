@startuml Design-ClassDiagram
skinparam style strictuml

<<<<<<< HEAD
class ExamsView {

}

class ExamView {
=======
class ExamsView as "ExamView" <<JFrame>> {
}
class ExamView as "ExamView" <<JFrame>> {
>>>>>>> 15613a1e2de84fb1e9d68da731bd007a4f60b1d7
__
+showQuestions():void
+showInstructions():void
+endExam():void
}
<<<<<<< HEAD
=======
class ExamEndedView as "ExamEndedView" <<JFrame>>{
__
+showScore(Result):void
}
class CertificatesView as "CertificatesView" <<JFrame>>
class CertificateView as "CertificatesView" <<JFrame>>{
+show(Certificate):void

}
class ResultView as "ResultView" <<JFrame>>{
__
+showScore(Result):void
}
>>>>>>> 15613a1e2de84fb1e9d68da731bd007a4f60b1d7

class NewExamView as "NewExamView" <<JFrame>>{
-setName(Name):void
-setInstructions(Instructions):void
}

class ExamPublishedView as "ExamPublishedView" <<JFrame>>
class AdminExamView as "AdminExamView" <<JFrame>>

class CreateExamController{
__
-createExam():void
-createQuestion():void
-setQuestions():void
-setAnswers():void
-completeExamCreation():void
}

class Questions{
-domain:string
}
class Answers {
-numOption: int
-correct_option:bool
-justification:string
}
class Exam {
-name:string
-instructions:string
-correctOptions:int[1..*]
__
-getQuestion():Question
-getInstructions():string
}


class Lines {
    -line:List<string>
    +setLines():void
    +format():void
}

class Text {
    +format():void
}

class Code {
    +format():void
}

ExamsView -- AdminExamView
CreateExamController -u- NewExamView
CreateExamController -u- ExamPublishedView
CreateExamController -- Exam
ExamPublishedView -u-|> ExamView

ExamsView -- ExamView
NewExamView -r- ExamPublishedView
AdminExamView -r- NewExamView
Questions *-r- Answers
Exam *-r- Questions
Lines <|-r- Code
Lines <|-r- Text
Lines --* Answers
Lines --* Questions

@enduml