@startuml Design-ClassDiagram
skinparam style strictuml

' Views
class ExamsView { /' MisExamenes'/
    -navBar: NavBar
    
    -title: JLabel
    -examTitle: JLable
    -text: JLabel
    -textButton: JLabel
    -examsContainer: JPanel
    -courseCard: JToolBar
    -courseList: JList
    -nextButton: JButton
    -prevButton: JButton
__
}
class ExamView { /' Examen'/
    -textButton: JLabel
    -textQuestion: JLabel
    -textAnswer: JLabel
    -answerOption: JPanel
    -answerList: JList
    -question: JPanel
    -questionsList: JList
    -counter: JPanel
    -nextButton: JButton
    -prevButton: JButton
__  
    -showQuestions():void
    -showInstructions():void
    -endExam():void
}
class ExamEndedView{ /' ExamenFinalizado'/
    -container: JPanel
    -title: JLabel
    -text: JLabel
    -textButton: JLabel
    -button: JButton
    -notaFinal: JPanel
__
-showScore(Result):void
}
class CertificatesView{ /' SolicitarCertificado'/
    -navBar: NavBar

    -certificatesContainer: JPanel
    -title: JLabel
    -titleCourses: JLabel
    -courseList: JList
    -courseItem: JPanel
    -textButton: JLabel
    -button: JButton
__
}
class CertificateView{ /' Certificado'/
    -navBar: NavBar
    
    -certificateContainer: JPanel
    -titlePage: JLabel
    -text: JLabel
    -textName: JLabel
    
    -textButton: JLabel
    -button: JButton
    -notaFinal: JPanel
__
    -show(Certificate):void
}
class ResultView{ /' Respuesta 1 y 2'/
    -question: JPanel
    -questionsList: JList
    -nextButton: JButton
    -prevButton: JButton
    -exitButton: JButton
    
    -questionContainer:JPanel
    -codeQuestion: JPanel
    -answersContainer: JPanel
    -questionTitle: JLabel
    -textAnswers: JLabel
    -answerOption: JPanel
    -textExplanation: JLabel
    -smallText: JPanel
    -explanationButton: JButton
__
    -showScore(Result):void
}

class NewExamView { /' CrearExamen'/
    -labels: JLabel
    -textField: JTextField
    -codeField: JTextArea
    -question: JPanel
    -questionsList: JList
    -nextButton: JButton
    -prevButton: JButton
    -publishButton: JButon
    -addQuestionButton: JButton
__
    -setName(Name):void
    -setInstructions(Instructions):void
}

class ExamPublishedView{ /' ExamenCreado'/
    -contaner: JPanel
    -title: JLabel
    -text: JLabel
    -textButton: JLabel
    -button: JButton
__
}
class ExamsView as "ExamView" <<JFrame>>
class ExamView as "ExamView" <<JFrame>> {
__
+showQuestions():void
+showInstructions():void
+endExam():void
}
class AdminExamView{ /' AdministradorExamenes'/
    -navBar: NavBar

    -examsContainer: JPanel
    -title: JLabel
    -titleExamns: JLabel
    -examsList: JList
    -examsItem: JPanel
    -textButton: JLabel
    -createButton: JButton
    -editButton: JButton
}

class NewExamView as "NewExamView" <<JFrame>>{
-setName(Name):void
-setInstructions(Instructions):void
}

class ExamPublishedView as "ExamPublishedView" <<JFrame>>
class AdminExamView as "AdminExamView" <<JFrame>>


' Controllers
class CreateExamController{
__
    -createExam():void
    -createQuestion():void
    -setQuestions():void
    -setAnswers():void
    -completeExamCreation():void
}

class PresentExamController {
__
    -setResult(Option):void
    -chooseExam(Exam_Name):void
    -startExam():void
    -getAnswer():Answer
    -getQuestions():Questions
}

class RequestCertificateController {
__
    -requestCeritifcate(Course_Name):void
    -getSummary():string
    -generateCertificate(Summary):Certificate
}

' Models
class Questions{
    -domain:string
}
class Answers {
    -numOption: int
    -correct_option:bool
    -justification:string
}
class Exam {
    -name:string
    -instructions:string
    -correctOptions:int[1..*]
__
    -getQuestion():Question
    -getInstructions():string
}
class Result {
    -elections:int[1...*]
    -score:float
__
    -checkAnswers(Elections, CorrectOptions):float
}

class Certificate {
    -student:Name
}

class Name {
    -first:string
    -last:string
}

class Course{
    -name:string
    -summary:string
    -profesor:Name
}

class Lines {
    -line:List<string>
    +setLines():void
    +format():void
}

class Text {
    +format():void
}

class Code {
    +format():void
}

ExamsView -- AdminExamView
CreateExamController -u- NewExamView
CreateExamController -u- ExamPublishedView
CreateExamController -- Exam
ExamPublishedView -u-|> ExamView

ExamsView -- ExamView
NewExamView -r- ExamPublishedView
AdminExamView -r- NewExamView
Questions *-r- Answers
Exam *-r- Questions
Lines <|-u- Code
Lines <|-r- Text
Lines --* Answers
Lines --* Questions

@enduml