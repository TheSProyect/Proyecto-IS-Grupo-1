@startuml
actor User

boundary AdminExamView as AV
boundary NewExamView as NV
boundary ExamPublishedView as PV

control CreateExamController as C

entity Exam as X
entity Questions as Q
entity Answers as A
activate User
activate AV

User -> AV : :CreateExam()

AV -> NV : new NewExamView()
deactivate AV
activate NV

activate C
NV -> C : CreateExam()
C -> X : new Exam()
activate X
X -> Q : new Questions()
activate Q
X -> A : new Answers()
activate A

opt 
User -> NV : CreateQuestions()
ref over User,A
Usecase CreateQuestion
end ref

end

User -> NV : FinishExam()

NV --> User : RequestExamInfoPopup

User -> NV : NewExamInfo(ExamInfo)

NV -> C : SetExamInfo(ExamInfo)

C -> X : SetInfo(ExamInfo)

NV-> PV : new ExamPublishedView(name)
deactivate NV
activate PV

PV -> C : GetExamInfo(name)

C -> X : :getInfo()

X -> Q : :getQuestions()
Q --> X : questions
X --> C : questions

X -> A : :getAnswers()
A --> X : answers
X --> C : answers


C -> PV : showFinishedExam(questions, answers)
deactivate C

PV --> User : finishedExam
@enduml
