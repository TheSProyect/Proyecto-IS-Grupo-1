@startuml
actor User
boundary NewExamView as NV

control CreateQuestionController as C

entity Exam as X
entity Questions as Q
entity Answers as A

activate X
activate User
activate NV
activate Q
activate A

User -> NV : AddQuestion(questioninfo)
NV -> C : SetQuestionInfo(questioninfo)
activate C


C -> X : SetQuestions(questioninfo)

X -> Q : new Questions(questioninfo)


C -> X : SetAnswers(questioninfo)
X -> A : new Answers(questioninfo)


C -> NV : :showAddedMessage()
deactivate C

NV --> User : addedMessage
@enduml
